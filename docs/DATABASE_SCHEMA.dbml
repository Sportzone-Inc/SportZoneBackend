// SportZone Backend - Complete Database Schema (MongoDB)
// All tables are now fully implemented!

// ============================================================
// CORE ENTITIES
// ============================================================

Table users {
  _id ObjectId [primary key]
  username varchar [unique]
  email varchar [not null, unique]
  password varchar [not null]
  firstName varchar
  lastName varchar
  name varchar [not null]
  profileImage varchar
  bio text
  phoneNumber varchar
  dateOfBirth date
  gender varchar
  location varchar
  latitude double
  longitude double
  preferredSport varchar
  skillLevel varchar
  isActive boolean [default: true]
  isVerified boolean [default: false]
  lastLoginAt timestamp
  createdAt timestamp [default: `now()`]
  updatedAt timestamp [default: `now()`]
}

Table sports {
  _id ObjectId [primary key]
  name varchar [not null]
  type varchar [not null]
  category varchar
  description text
  iconUrl varchar
  location varchar
  radiusKm double
  createdBy ObjectId
  isActive boolean [default: true]
  createdAt timestamp [default: `now()`]
  updatedAt timestamp [default: `now()`]
}

Table sport_activities {
  _id ObjectId [primary key]
  uniqueId varchar [not null, unique]
  name varchar [not null]
  description text
  sportType varchar [not null]
  category varchar
  location varchar
  address varchar
  city varchar
  country varchar
  latitude double
  longitude double
  radiusKm double
  scheduledDate timestamp
  startTime timestamp
  endTime timestamp
  duration integer
  maxParticipants integer
  minParticipants integer [default: 1]
  currentParticipants integer [default: 0]
  participants json
  waitlist json
  skillLevelRequired varchar
  ageRestriction varchar
  costPerPerson decimal [default: 0]
  currency varchar [default: 'USD']
  equipmentProvided boolean [default: false]
  equipmentNeeded text
  status varchar
  isActive boolean [default: true]
  isPublic boolean [default: true]
  isFeatured boolean [default: false]
  createdBy ObjectId [not null]
  organizerId ObjectId
  views integer [default: 0]
  tags json
  imageUrls json
  createdAt timestamp [default: `now()`]
  updatedAt timestamp [default: `now()`]
}

// ============================================================
// SOCIAL FEATURES
// ============================================================

Table follows {
  _id ObjectId [primary key]
  followerId ObjectId [not null]
  followingId ObjectId [not null]
  createdAt timestamp [default: `now()`]
}

Table posts {
  _id ObjectId [primary key]
  userId ObjectId [not null]
  activityId ObjectId
  title varchar
  body text [not null]
  postType varchar
  mediaUrls json
  thumbnailUrl varchar
  likes json
  likesCount integer [default: 0]
  commentsCount integer [default: 0]
  sharesCount integer [default: 0]
  visibility varchar [default: 'public']
  isActive boolean [default: true]
  isPinned boolean [default: false]
  tags json
  location varchar
  latitude double
  longitude double
  createdAt timestamp [default: `now()`]
  updatedAt timestamp [default: `now()`]
}

Table comments {
  _id ObjectId [primary key]
  postId ObjectId [not null]
  userId ObjectId [not null]
  parentCommentId ObjectId
  body text [not null]
  likes json
  likesCount integer [default: 0]
  isActive boolean [default: true]
  isEdited boolean [default: false]
  createdAt timestamp [default: `now()`]
  updatedAt timestamp [default: `now()`]
}

// ============================================================
// ACTIVITY INTERACTIONS
// ============================================================

Table activity_participants {
  _id ObjectId [primary key]
  activityId ObjectId [not null]
  userId ObjectId [not null]
  status varchar [not null]
  role varchar
  joinedAt timestamp [default: `now()`]
  cancelledAt timestamp
  attendanceMarkedAt timestamp
  notes text
  rating integer
  review text
  createdAt timestamp [default: `now()`]
  updatedAt timestamp [default: `now()`]
}

Table activity_invitations {
  _id ObjectId [primary key]
  activityId ObjectId [not null]
  senderId ObjectId [not null]
  receiverId ObjectId [not null]
  status varchar [default: 'pending']
  message text
  sentAt timestamp [default: `now()`]
  respondedAt timestamp
  expiresAt timestamp
}

// ============================================================
// MESSAGING
// ============================================================

Table conversations {
  _id ObjectId [primary key]
  participants json [not null]
  conversationType varchar
  activityId ObjectId
  name varchar
  imageUrl varchar
  lastMessageId ObjectId
  lastMessageAt timestamp
  isActive boolean [default: true]
  createdBy ObjectId
  createdAt timestamp [default: `now()`]
  updatedAt timestamp [default: `now()`]
}

Table messages {
  _id ObjectId [primary key]
  conversationId ObjectId [not null]
  senderId ObjectId [not null]
  messageType varchar
  content text
  mediaUrl varchar
  activityId ObjectId
  readBy json
  isEdited boolean [default: false]
  isDeleted boolean [default: false]
  createdAt timestamp [default: `now()`]
  updatedAt timestamp [default: `now()`]
}

// ============================================================
// NOTIFICATIONS
// ============================================================

Table notifications {
  _id ObjectId [primary key]
  userId ObjectId [not null]
  notificationType varchar [not null]
  title varchar [not null]
  body text
  senderId ObjectId
  activityId ObjectId
  postId ObjectId
  commentId ObjectId
  actionUrl varchar
  deepLink varchar
  isRead boolean [default: false]
  readAt timestamp
  isSent boolean [default: false]
  sentAt timestamp
  createdAt timestamp [default: `now()`]
}

// ============================================================
// REVIEWS & RATINGS
// ============================================================

Table reviews {
  _id ObjectId [primary key]
  reviewType varchar
  activityId ObjectId
  reviewerId ObjectId [not null]
  revieweeId ObjectId
  rating integer [not null]
  title varchar
  comment text
  helpfulCount integer [default: 0]
  helpfulVotes json
  isVerified boolean [default: false]
  isActive boolean [default: true]
  response text
  respondedAt timestamp
  createdAt timestamp [default: `now()`]
  updatedAt timestamp [default: `now()`]
}

// ============================================================
// USER PREFERENCES & SETTINGS
// ============================================================

Table user_settings {
  _id ObjectId [primary key]
  userId ObjectId [not null, unique]
  emailNotifications boolean [default: true]
  pushNotifications boolean [default: true]
  smsNotifications boolean [default: false]
  notifyOnFollow boolean [default: true]
  notifyOnLike boolean [default: true]
  notifyOnComment boolean [default: true]
  notifyOnInvite boolean [default: true]
  notifyOnMessage boolean [default: true]
  notifyOnActivityReminder boolean [default: true]
  profileVisibility varchar [default: 'public']
  showLocation boolean [default: true]
  showEmail boolean [default: false]
  showPhoneNumber boolean [default: false]
  preferredSports json
  maxDistance integer [default: 50]
  preferredDays json
  preferredTimes json
  language varchar [default: 'en']
  theme varchar [default: 'light']
  measurementUnit varchar [default: 'metric']
  createdAt timestamp [default: `now()`]
  updatedAt timestamp [default: `now()`]
}

// ============================================================
// ALL RELATIONSHIPS
// ============================================================

Ref: sports.createdBy > users._id
Ref: sport_activities.createdBy > users._id
Ref: sport_activities.organizerId > users._id
Ref: follows.followerId > users._id
Ref: follows.followingId > users._id
Ref: posts.userId > users._id
Ref: posts.activityId > sport_activities._id
Ref: comments.postId > posts._id
Ref: comments.userId > users._id
Ref: comments.parentCommentId > comments._id
Ref: activity_participants.activityId > sport_activities._id
Ref: activity_participants.userId > users._id
Ref: activity_invitations.activityId > sport_activities._id
Ref: activity_invitations.senderId > users._id
Ref: activity_invitations.receiverId > users._id
Ref: conversations.createdBy > users._id
Ref: messages.conversationId > conversations._id
Ref: messages.senderId > users._id
Ref: notifications.userId > users._id
Ref: notifications.senderId > users._id
Ref: reviews.reviewerId > users._id
Ref: reviews.revieweeId > users._id
Ref: reviews.activityId > sport_activities._id
Ref: user_settings.userId > users._id

// ============================================================
// IMPLEMENTATION STATUS
// ============================================================
// ✅ ALL ENTITIES FULLY IMPLEMENTED!
// ✅ Complete CRUD APIs for all features
// ✅ Full MongoDB integration with indexes
// ✅ Authentication & authorization
// ✅ Comprehensive DTOs & validation
